/*****************************************************************//**
 * \file   RSA.cpp
 * \brief  Main file test RSA algorithm
 * 
 * \author dqthebt
 * \date   October 2020
 *********************************************************************/
#include <iostream>
#include "biginteger.h"
#include "algorithm.h"
int main()
{
	BigInteger a("10101000000000000000000000000000111111111000000000000000000111101000000000000011111110101011111111111111000000000000000000000111111111111000101111101000000000000011111100011010000111111011111111111110000000000000000000000000111111111111111111010101010010101010101010101001010101001010010010100000000000000000"\
        "01111010100101101111111111100000101010101010101010101011110000000000000001011111000000000000000000111111111111111100000011111111111111111110000000000000000000010101010111111101000001000010");
    const BigInteger b("1010100000000000000000000000000011111111100000000000000000011110100000000000001111111010101111111111111100000000000000000000011111111111100010111110100000000000001111110001101000011111101111111111111000000000000000000000000011111111111111111101010101001010101010101010100101010100101001001010000000000000000001");
    std::cout<<"a="<<a<<std::endl;
    std::cout<<"b="<<b<<std::endl;


    std::cout<<"a + b     "<< a + b << std::endl;
    std::cout<<"a - b     "<< a - b << std::endl;
	std::cout<<"a%b         "<<(a%b)<<std::endl;

    Algorithm* algorithm = Algorithm::GetInstance();
    std::cout<<"MulMod: "<<algorithm->MulMod(BigInteger("10101000000000000000000000000000111111111000000000000000000111101000000000000011111110101011111111111111000000000000000000000111111111111000101111101000000000000011111100011010000111111011111111111110000000000000000000000000111111111111111111010101010010101010101010101001010101001010010010100000000000000000"), 
        BigInteger("10101000000000000000000000000000111111111000000000000000000111101000000000000011111110101011111111111111000000000000000000000111111111111000101111101000000000000011111100011010000111111011111111111110000000000000000000000000111111111111111111010101010010101010101010101001010101001010010010100000000000000000"), 
        BigInteger("10101000000000000000000000000000111111111000000000000000000111101000000000000011111110101011111111111111000000000000000000000111111111111000101111101000000000000011111100011010000111111011111111111110000000000000000000000000111111111111111111010101010010101010101010101001010101001010010010100000000000000000"\
        "01111010100101101111111111100000101010101010101010101011110000000000000001011111000000000000000000111111111111111100000011111111111111111110000000000000000000010101010111111101000001000010"))<<std::endl;

    std::cout<<"PowMod: "<<algorithm->PowMod(BigInteger("10"), BigInteger("10"), BigInteger("101"))<<std::endl;

    std::cout<<"Is prime: "<< algorithm->PrimeTest(BigInteger("11000101110100001"))<<std::endl;
    std::cout<<"Number: "<< algorithm->GenBigInteger(5);
}